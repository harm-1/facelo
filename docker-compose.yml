version: "3.7"

x-build-args: &build_args
  PYTHON_IMAGE_VERSION: slim-buster
  NODE_IMAGE_VERSION: slim


services:
  database:
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    ports:
      - "127.0.0.1:3306:3306"
    env_file: .env
    volumes:
      - type: volume
        source: db_data
        target: /var/lib/mysql
      - type: bind
        source: ./my.cnf
        target: /etc/my.cnf
        read_only: true
        
  backend:
    build:
      context: ./backend
      target: development
      args:
        <<: *build_args
    depends_on:
      - database
    ports:
      - "127.0.0.1:5000:5000"
    env_file: .env
    environment:
      FLASK_ENV: development
      FLASK_DEBUG: 0
    volumes:
      - type: bind
        source: ./backend
        target:  /facelo/backend
      - type: volume
        source: testing_images
        target: /facelo/testing_images
      - type: bind
        source: ./example_images
        target: /facelo/example_images


  manage:
    build:
      context: ./backend/
      target: development
      args:
        <<: *build_args
    depends_on:
      - database
    ports:
      - "127.0.0.1:5000:5000"
    env_file: .env
    environment:
    #   FLASK_ENV: development
    #   FLASK_DEBUG: 1
      FLASK_ENV: production
      FLASK_DEBUG: 0
    stdin_open: true
    tty: true
    volumes:
      - type: bind
        source: ./backend
        target:  /facelo/backend
      - type: volume
        source: testing_images
        target: /facelo/testing_images
      - type: bind
        source: ./example_images
        target: /facelo/example_images

  frontend:
    build:
      context: ./frontend/
      target: development
      args:
        <<: *build_args
    depends_on:
      # - backend
      - manage
    ports:
      - "127.0.0.1:8080:8080"
    volumes:
      - type: bind
        source: ./frontend
        target:  /app
        read_only: true

  f_manage:
    build:
      context: ./frontend/
      target: development
      args:
        <<: *build_args
    depends_on:
      - backend
    ports:
      - "8080:8080"
    stdin_open: true
    tty: true
    volumes:
      - type: bind
        source: ./frontend
        target:  /app

volumes:
  db_data:
  testing_images:

